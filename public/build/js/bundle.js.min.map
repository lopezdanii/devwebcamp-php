{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["horaSeleccionada","radioSeleccionado","optionSeleccionado","document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","removeEventListener","obtenerHorasDisponibles","json","id","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresionReg","RegExp","normalize","replace","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","key","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector(\"#horas\");\r\n    let horaSeleccionada;\r\n    let radioSeleccionado;\r\n    let optionSeleccionado;\r\n \r\n    if (horas) {\r\n        const categoria = document.querySelector(\"[name='categoria_id']\");\r\n        const dias = document.querySelectorAll(\"[name='dia']\");\r\n        const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n        const inputHiddenHora = document.querySelector(\"[name='hora_id']\");\r\n \r\n        categoria.addEventListener(\"change\", terminoBusqueda);\r\n        dias.forEach((dia) => dia.addEventListener(\"change\", terminoBusqueda));\r\n \r\n        let busqueda = {\r\n            categoria_id: +categoria.value || \"\",\r\n            dia: +inputHiddenDia.value || \"\",\r\n        };\r\n \r\n        if (!Object.values(busqueda).includes(\"\")) {\r\n            (async () => {\r\n                await buscarEventos();\r\n \r\n                const id = inputHiddenHora.value;\r\n \r\n                // Aqui asignamos el valor a la variable global porque lo requeriremos despues\r\n                horaSeleccionada = document.querySelector(\r\n                    `[data-hora-id='${id}']`\r\n                );\r\n \r\n                // Guardamos el valor del select y el valor del radio activo\r\n                radioSeleccionado = document.querySelector(\r\n                    '[name=\"dia\"]:checked'\r\n                );\r\n                optionSeleccionado = document.querySelector(\r\n                    '[name=\"categoria_id\"]'\r\n                ).value;\r\n \r\n                horaSeleccionada.classList.remove(\"horas__hora--deshabilitada\");\r\n                horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\r\n \r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n        }\r\n \r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n \r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n \r\n            const horaPrevia = document.querySelector(\r\n                \".horas__hora--seleccionada\"\r\n            );\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n \r\n            if (Object.values(busqueda).includes(\"\")) {\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n \r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n \r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n \r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach((li) =>\r\n                li.classList.add(\"horas__hora--deshabilitada\")\r\n            );\r\n \r\n            // Comprobar eventos ya tomados y quitar el deshabilidado\r\n            const horasTomadas = eventos.map((evento) => evento.hora_id);\r\n \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter(\r\n                (li) => !horasTomadas.includes(li.dataset.horaId)\r\n            );\r\n \r\n            resultado.forEach((li) =>\r\n                li.classList.remove(\"horas__hora--deshabilitada\")\r\n            );\r\n \r\n            // Obtener todos los li y añadir un Event Listener\r\n            const horasDisponibles = document.querySelectorAll(\"#horas li\");\r\n            horasDisponibles.forEach((hora) => {\r\n                hora.addEventListener(\"click\", seleccionarHora);\r\n            });\r\n \r\n            // Obtener el li con la clase buscada y eliminar el Event listener para que no se pueda seleccionar\r\n            const horasDeshabilitadas = document.querySelectorAll(\r\n                \".horas__hora--deshabilitada\"\r\n            );\r\n            horasDeshabilitadas.forEach((hora) =>\r\n                hora.removeEventListener(\"click\", seleccionarHora)\r\n            );\r\n \r\n            if (\r\n                horaSeleccionada &&\r\n                optionSeleccionado === document.querySelector(\"select\").value &&\r\n                radioSeleccionado ===\r\n                    document.querySelector('[name=\"dia\"]:checked')\r\n            ) {\r\n                // Eliminamos la clase deshabilitada\r\n                horaSeleccionada.classList.remove(\"horas__hora--deshabilitada\");\r\n                // Añadimos la clase para verla como seleccionada\r\n                horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\r\n \r\n                // Volvemos a llenar los campos hidden\r\n                inputHiddenHora.value = horaSeleccionada.dataset.horaId;\r\n                inputHiddenDia.value = optionSeleccionado;\r\n            }\r\n        } // Cierre de la función obtenerHorasDisponibles\r\n \r\n        function seleccionarHora(e) {\r\n            const horaPrevia = document.querySelector(\r\n                \".horas__hora--seleccionada\"\r\n            );\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n \r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n \r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n            inputHiddenDia.value = document.querySelector(\r\n                \"[name='dia']:checked\"\r\n            ).value;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados= [];\r\n\r\n        const listadoPonentes= document.querySelector('#listado-ponentes');\r\n        const ponenteHidden= document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        \r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteHidden.value){\r\n            (async() => {\r\n                const ponente= await obtenerPonente(ponenteHidden.value);\r\n\r\n                //Insertar en el HTML\r\n                const ponenteDOM= document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--selected');\r\n                ponenteDOM.textContent= `${ponente.nombre} ${ponente.apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })();\r\n        }\r\n\r\n        async function obtenerPonente(id){\r\n            const url=`/api/ponente?id=${id}`;\r\n\r\n            const respuesta= await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            return resultado;\r\n        }\r\n\r\n        async function obtenerPonentes(){\r\n            //Se obtienen los registros y se hace la busqueda contra el objeto en memoria\r\n            const url = `/api/ponentes`; \r\n\r\n            const respuesta= await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []){\r\n            ponentes= arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length>=3){\r\n                //Empezar a mostrar resultados a partir de letra 3\r\n\r\n                //Buscamos por minuesculas, usando la siguiente expresion regular. Con el normalize y replace quitamos la tilde\r\n                const expresionReg= new RegExp(busqueda.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"), \"i\")\r\n\r\n                ponentesFiltrados = ponentes.filter (ponente => {\r\n                    if(ponente.nombre.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase().search(expresionReg) != -1) { //si encuentra el ponente\r\n                        return ponente;    \r\n                    }\r\n                });\r\n            } else {\r\n                //Se limpia si hay menos de 3 letras\r\n                ponentesFiltrados = [];\r\n            }\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n            //Limpiar registros buscados previos\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            } \r\n            if(ponentesFiltrados.length > 0){\r\n                //generar lista de filtrado\r\n                ponentesFiltrados.forEach( ponente => {\r\n                    const ponenteHTML= document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent= ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n\r\n                    ponenteHTML.onclick= seleccionarPonente;\r\n                    //Añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            }else{\r\n                //Mostrar mensaje no resultados\r\n                const noResultados= document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent= 'No hay resultados para esta búsqueda';\r\n                if(ponentesInput.value.length >=3){\r\n\r\n                    listadoPonentes.appendChild(noResultados);\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente= e.target;\r\n            //eliminar seleccionado previo\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--selected');\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--selected');\r\n            }\r\n            \r\n            ponente.classList.add('listado-ponentes__ponente--selected');\r\n\r\n            ponenteHidden.value= ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    \r\n    if(tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n        \r\n        //Almacena en array tagsInput los valores que se escriban en el formulario separados por comas\r\n        function guardarTag(e) {\r\n            if(e.key ===','){\r\n                e.preventDefault(); //Prevenir accion por defecto, que es escribir en el campo del formulario, no agrega la coma\r\n                \r\n                if(e.target.value.trim()=== '' || e.target.value<1){\r\n                    return;\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value= '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n        \r\n        //Muestra los tags almacenados en el formulario como lista\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})()\r\n\r\n"]}