{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","dias","querySelectorAll","categoria","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","json","console","log","listadoHoras","forEach","li","add","hora","removeEventListener","seleccionarHora","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","addEventListener","obtenerHorasDisponibles","buscarEventos","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","key","preventDefault","trim"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAIA,MAAAC,EAAAL,SAAAM,iBAAA,gBACAC,EAAAP,SAAAC,cAAA,yBACAO,EAAAR,SAAAC,cAAA,mBACAQ,EAAAT,SAAAC,cAAA,oBAOA,SAAAS,EAAAC,GAEAT,EAAAS,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAL,EAAAK,MAAA,GACAN,EAAAM,MAAA,GAEA,MAAAC,EAAAf,SAAAC,cAAA,0BACAc,GACAA,EAAAC,UAAAC,OAAA,yBAIAC,OAAAC,OAAAjB,GAAAkB,SAAA,KAOAC,iBAEA,MAAAjB,IAAAA,EAAAD,aAAAA,GAAAD,EAEAoB,EAAA,+BAAAlB,kBAAAD,IAEAoB,QAAAC,MAAAF,GACAG,QAAAF,EAAAG,OAEAC,QAAAC,IAAAH,GAKA,SAAAA,GAEA,MAAAI,EAAA7B,SAAAM,iBAAA,aACAuB,EAAAC,QAAAC,IACAA,EAAAf,UAAAgB,IAAA,8BACAD,EAAAf,UAAAC,OAAA,6BAGAjB,SAAAM,iBAAA,aACAwB,QAAAG,GAAAA,EAAAC,oBAAA,QAAAC,IAIA,MAAAC,EAAAX,EAAAY,IAAAC,GAAAA,EAAAC,SAEAC,EAAAC,MAAAC,KAAAb,GAGAW,EAAAG,OAAAZ,IAAAK,EAAAhB,SAAAW,EAAAa,QAAAC,SACAf,QAAAC,IACAA,EAAAf,UAAAC,OAAA,8BACAc,EAAAf,UAAAgB,IAAA,6BAKAhC,SAAAM,iBAAA,8CAEAwB,QAAAG,GAAAA,EAAAa,iBAAA,QAAAX,IAhCAY,CAAAtB,GAbAuB,GAgDA,SAAAb,EAAAxB,GAEA,MAAAI,EAAAf,SAAAC,cAAA,0BACAc,GACAA,EAAAC,UAAAC,OAAA,yBAIAN,EAAAC,OAAAI,UAAAgB,IAAA,yBAGAvB,EAAAK,MAAAH,EAAAC,OAAAgC,QAAAC,OAKArC,EAAAM,MAAAd,SAAAC,cAAA,wBAAAa,MACAN,EAAAM,MAAAH,EAAAC,OAAAgC,QAAAC,OAxFAxC,EAAAyB,QAAA1B,IACAA,EAAA0C,iBAAA,SAAApC,KAEAH,EAAAuC,iBAAA,SAAApC,IAlBA,GCAA,WACA,MAAAuC,EAAAjD,SAAAC,cAAA,eAGA,GAAAgD,EAAA,CACA,MAAAC,EAAAlD,SAAAC,cAAA,SACAkD,EAAAnD,SAAAC,cAAA,iBACA,IAAAmD,EAAA,GA2BA,SAAAC,IACAH,EAAAI,YAAA,GAEAF,EAAAtB,QAAAyB,IACA,MAAAC,EAAAxD,SAAAyD,cAAA,MACAD,EAAAxC,UAAAgB,IAAA,mBACAwB,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAEAK,IAGA,SAAAF,EAAAhD,GACAA,EAAAC,OAAAK,SACAmC,EAAAA,EAAAT,OAAAY,GAAAA,IAAA5C,EAAAC,OAAA0C,aACAO,IAGA,SAAAA,IACAV,EAAArC,MAAAsC,EAAAU,WA5CA,KAAAX,EAAArC,QACAsC,EAAAD,EAAArC,MAAAiD,MAAA,KACAV,KAGAJ,EAAAH,iBAAA,YAGA,SAAAnC,GACA,GAAA,MAAAA,EAAAqD,IAAA,CAGA,GAFArD,EAAAsD,iBAEA,KAAAtD,EAAAC,OAAAE,MAAAoD,QAAAvD,EAAAC,OAAAE,MAAA,EACA,OAGAsC,EAAA,IAAAA,EAAAzC,EAAAC,OAAAE,MAAAoD,QACAjB,EAAAnC,MAAA,GAEAuC,SA7BA","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas= document.querySelector('#horas');\r\n    \r\n    if(horas) {\r\n        let busqueda = {\r\n            categoria_id : '',\r\n            dia: ''\r\n        }\r\n\r\n        //Recuperamos la categoria y el dia seleccionado por el usuario\r\n        const dias= document.querySelectorAll('[name=\"dia\"]');\r\n        const categoria= document.querySelector('[name=\"categoria_id\"]');\r\n        const inputHiddenDia= document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora= document.querySelector('[name=\"hora_id\"]');\r\n\r\n        dias.forEach(dia => {\r\n            dia.addEventListener('change',terminoBusqueda);\r\n        });\r\n        categoria.addEventListener('change',terminoBusqueda);\r\n\r\n        function terminoBusqueda(e) {\r\n            //Vinculamos los datos al objeto busqueda\r\n            busqueda[e.target.name] =e.target.value\r\n\r\n            //Reiniciar campos ocultos y selector de horas\r\n            inputHiddenHora.value= '';\r\n            inputHiddenDia.value= '';\r\n            \r\n            const horaPrevia= document.querySelector('.horas__hora--selected');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--selected');\r\n            }\r\n\r\n\r\n            if(Object.values(busqueda).includes('')){\r\n                return ;\r\n            }\r\n            \r\n            buscarEventos();\r\n        }\r\n        \r\n        async function buscarEventos(){\r\n\r\n            const { dia, categoria_id } = busqueda;\r\n\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`; \r\n\r\n            const resultado= await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            console.log(eventos);\r\n            obtenerHorasDisponibles(eventos);\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles (eventos) {\r\n            //Reiniciar las horas \r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => {\r\n                li.classList.add('horas__hora--deshabilitada');\r\n                li.classList.remove('horas__hora--habilitada');\r\n            });\r\n            //Debemos eliminar el eventlistener de las deshabilitadas para que no se puedan seleccionar\r\n            const horasDeshabilitadas = document.querySelectorAll('#horas li');\r\n            horasDeshabilitadas.forEach( hora => hora.removeEventListener('click', seleccionarHora));\r\n\r\n\r\n            //comprobar eventos y quitar deshabilitar\r\n            const horasTomadas= eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHorasArray= Array.from(listadoHoras);\r\n\r\n            //Se filtran las horas que no se encuentran en horas tomadas\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => {\r\n                li.classList.remove('horas__hora--deshabilitada');\r\n                li.classList.add('horas__hora--habilitada');\r\n\r\n            });\r\n\r\n            //Recupera las horas que no estan deshabilitadas\r\n            const horasDisponibles= document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            //deshabilita hora previo si nuevo click\r\n            const horaPrevia= document.querySelector('.horas__hora--selected');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--selected');\r\n            }\r\n\r\n            //agregar clase seleccionado\r\n            e.target.classList.add('horas__hora--selected');\r\n\r\n            //se a√±ade el id de la hora al campo oculto de hora\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n            \r\n            \r\n            //Llenar campo oculto de dia\r\n\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n            inputHiddenDia.value = e.target.dataset.horaId;\r\n\r\n        }\r\n    }\r\n\r\n\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    \r\n    if(tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n        \r\n        //Almacena en array tagsInput los valores que se escriban en el formulario separados por comas\r\n        function guardarTag(e) {\r\n            if(e.key ===','){\r\n                e.preventDefault(); //Prevenir accion por defecto, que es escribir en el campo del formulario, no agrega la coma\r\n                \r\n                if(e.target.value.trim()=== '' || e.target.value<1){\r\n                    return;\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value= '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n        \r\n        //Muestra los tags almacenados en el formulario como lista\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})()\r\n\r\n"]}